#BlueJ class context
comment0.target=AnimalPlant
comment0.text=\r\n\ This\ class\ contains\ some\ common\ methods\ between\ Animal\ and\ Plant\ such\ as\ incrementAge()\ and\ canReproduce(),\r\n\ however\ the\ real\ purpose\ of\ this\ class\ is\ to\ be\ able\ to\ allow\ for\ other\ classes\ to\ refer\ to\ animals\ and\ plants\ as\ the\ same\ for\ certain\ processes.\r\n\ \r\n\ @author\ Adam\ Murray\ and\ Ryan\ Yan\r\n\ @version\ 2022.02.28\r\n
comment1.params=age\ field\ location
comment1.target=AnimalPlant(int,\ Field,\ Location)
comment1.text=\r\n\ Constructor\ for\ objects\ of\ class\ AnimalPlant.\r\n\ @param\ age\ The\ initial\ age\ of\ the\ AnimalPlant.\r\n\ @param\ field\ The\ field\ that\ the\ simulator\ is\ using.\r\n\ @param\ location\ The\ location\ of\ this\ AnimalPlant\ on\ the\ field.\r\n
comment10.params=
comment10.target=int\ getMaxAge()
comment10.text=\r\n\ The\ max\ Age\ of\ the\ AnimalPlant.\r\n\ @return\ The\ max\ age\ of\ the\ AnimalPlant.\r\n
comment11.params=
comment11.target=int\ getMinReproduceAge()
comment11.text=\r\n\ The\ minimum\ age\ that\ the\ AnimalPlant\ can\ reproduce\ at.\r\n\ @return\ The\ minimum\ age\ that\ the\ AnimalPlant\ can\ reproduce\ at.\r\n
comment12.params=
comment12.target=int\ getFoodValue()
comment12.text=\r\n\ The\ Food\ value\ of\ the\ AnimalPlant.\r\n\ @return\ The\ Food\ value\ of\ the\ AnimalPlant.\r\n
comment13.params=
comment13.target=double\ getIllnessResistance()
comment13.text=\r\n\ The\ illness\ resistance\ of\ the\ AnimalPlant.\r\n\ @return\ The\ illness\ resistance\ of\ the\ AnimalPlant.\r\n
comment2.params=
comment2.target=boolean\ canReproduce()
comment2.text=\r\n\ Returns\ whether\ the\ AnimalPlant\ is\ old\ enough\ to\ reproduce.\r\n\ @return\ true\ if\ the\ AnimalPlant\ is\ old\ enought\ to\ reproduce,\ false\ if\ its\ too\ young.\r\n
comment3.params=
comment3.target=void\ incrementAge()
comment3.text=\r\n\ Calls\ increment\ age\ in\ life,\ then\ checks\ if\ the\ AnimalPlant\ hasnt\ become\ too\ old,\ if\ it\ is\ too\ old\ it\ dies.\r\n
comment4.params=newInfectionClass
comment4.target=void\ addInfection(DiseaseEnum)
comment4.text=\r\n\ Adds\ a\ Disease\ Class\ to\ the\ infectedBy\ set.\r\n\ @param\ newInfectionClass\ The\ Disease\ Class\ to\ be\ added\ to\ the\ infection\ set.\r\n
comment5.params=removeInfectionClass
comment5.target=void\ removeInfection(DiseaseEnum)
comment5.text=\r\n\ Removes\ a\ Disease\ Class\ from\ the\ infectedBy\ set.\r\n\ @param\ removeInfectionClass\ The\ Disease\ Class\ to\ be\ removed\ from\ the\ infection\ set.\r\n
comment6.params=newInfection
comment6.target=boolean\ infected(DiseaseEnum)
comment6.text=\r\n\ Checks\ if\ a\ given\ Class\ object\ is\ present\ in\ the\ infectedBy\ set.\r\n\ @param\ newInfection\ A\ class\ to\ be\ checked\ against\ the\ infectedBy\ set.\r\n\ @return\ true\ if\ newInfection\ is\ found\ in\ infectedBy,\ false\ if\ its\ not.\r\n
comment7.params=
comment7.target=java.util.Set\ getInfectedBy()
comment8.params=
comment8.target=Location\ getLocation()
comment8.text=\r\n\ Returns\ the\ location\ of\ the\ AnimalPlant.\r\n\ @return\ the\ location\ of\ the\ AnimalPlant.\r\n
comment9.params=location
comment9.target=void\ setLocation(Location)
comment9.text=\r\n\ Sets\ the\ location\ of\ the\ AnimalPlant\ to\ the\ location\ given.\r\n\ @param\ location\ the\ new\ location\ of\ the\ AnimalPlant.\r\n
numComments=14
